import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, w as globals, a as space, e as element, t as text, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, h as claim_text, k as add_location, j as attr_dev, l as src_url_equal, n as insert_hydration_dev, o as append_hydration_dev, x as set_data_dev, p as noop } from './client.13e60c2a.js';

/* src\routes\about.svelte generated by Svelte v3.46.4 */

const { console: console_1 } = globals;
const file = "src\\routes\\about.svelte";

function create_fragment(ctx) {
	let t0;
	let div10;
	let div0;
	let h1;
	let strong0;
	let t1;
	let t2;
	let div1;
	let span;
	let t3;
	let br0;
	let t4;
	let div5;
	let div2;
	let img0;
	let img0_src_value;
	let t5;
	let div3;
	let img1;
	let img1_src_value;
	let t6;
	let div4;
	let img2;
	let img2_src_value;
	let t7;
	let div6;
	let t8;
	let br1;
	let t9;
	let t10;
	let div7;
	let t11;
	let br2;
	let t12;
	let t13;
	let div8;
	let t14;
	let br3;
	let t15;
	let t16;
	let div9;
	let strong1;
	let t17;
	let t18;
	let t19;
	let t20;
	let t21;
	let t22;
	let div11;
	let t23;
	let br4;
	let t24;
	let br5;
	let t25;
	let t26;
	let t27;

	const block = {
		c: function create() {
			t0 = space();
			div10 = element("div");
			div0 = element("div");
			h1 = element("h1");
			strong0 = element("strong");
			t1 = text("Møt det verdensberømte teamet vårt!");
			t2 = space();
			div1 = element("div");
			span = element("span");
			t3 = text("Our team is your team. When your mission is to be better, faster and smarter, you need the best people driving your vision forward. You need people who can create focused marketing strategies that align with business goals, who can infuse their creativity into groundbreaking campaigns, and who can analyze data to optimize every tactic along the way. You need Teo AS. Get to know your team below.*");
			br0 = element("br");
			t4 = space();
			div5 = element("div");
			div2 = element("div");
			img0 = element("img");
			t5 = space();
			div3 = element("div");
			img1 = element("img");
			t6 = space();
			div4 = element("div");
			img2 = element("img");
			t7 = space();
			div6 = element("div");
			t8 = text("- Teodor Log Bjørvik");
			br1 = element("br");
			t9 = text("Eier");
			t10 = space();
			div7 = element("div");
			t11 = text("- Teodor Log Bjørvik");
			br2 = element("br");
			t12 = text("Daglig Leder");
			t13 = space();
			div8 = element("div");
			t14 = text("- Teodor Log Bjørvik");
			br3 = element("br");
			t15 = text("Swag");
			t16 = space();
			div9 = element("div");
			strong1 = element("strong");
			t17 = text("Vi blir ");
			t18 = text(/*nextAge*/ ctx[0]);
			t19 = text(" år gamle om ");
			t20 = text(/*Difference_In_Days*/ ctx[2]);
			t21 = text(" dager.**");
			t22 = space();
			div11 = element("div");
			t23 = text("*Jeg stjal denne teksten fra google");
			br4 = element("br");
			t24 = text("\n    **Ikke særlig relevant, men jeg brukte en stund på å lage en javascript code som alltid regner ut min nøyaktige alder og dager til bursdag.");
			br5 = element("br");
			t25 = text(" Den nøyaktige alderen akkurat nå er: ");
			t26 = text(/*Age_Difference_In_Days*/ ctx[1]);
			t27 = text(" år.");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all('[data-svelte=\"svelte-1ine71f\"]', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div10 = claim_element(nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div0 = claim_element(div10_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			strong0 = claim_element(h1_nodes, "STRONG", {});
			var strong0_nodes = children(strong0);
			t1 = claim_text(strong0_nodes, "Møt det verdensberømte teamet vårt!");
			strong0_nodes.forEach(detach_dev);
			h1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t2 = claim_space(div10_nodes);
			div1 = claim_element(div10_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			span = claim_element(div1_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t3 = claim_text(span_nodes, "Our team is your team. When your mission is to be better, faster and smarter, you need the best people driving your vision forward. You need people who can create focused marketing strategies that align with business goals, who can infuse their creativity into groundbreaking campaigns, and who can analyze data to optimize every tactic along the way. You need Teo AS. Get to know your team below.*");
			br0 = claim_element(span_nodes, "BR", {});
			span_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t4 = claim_space(div10_nodes);
			div5 = claim_element(div10_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div2 = claim_element(div5_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img0 = claim_element(div2_nodes, "IMG", { src: true, class: true });
			div2_nodes.forEach(detach_dev);
			t5 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			img1 = claim_element(div3_nodes, "IMG", { src: true, class: true });
			div3_nodes.forEach(detach_dev);
			t6 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			img2 = claim_element(div4_nodes, "IMG", { src: true, class: true });
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t7 = claim_space(div10_nodes);
			div6 = claim_element(div10_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			t8 = claim_text(div6_nodes, "- Teodor Log Bjørvik");
			br1 = claim_element(div6_nodes, "BR", {});
			t9 = claim_text(div6_nodes, "Eier");
			div6_nodes.forEach(detach_dev);
			t10 = claim_space(div10_nodes);
			div7 = claim_element(div10_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			t11 = claim_text(div7_nodes, "- Teodor Log Bjørvik");
			br2 = claim_element(div7_nodes, "BR", {});
			t12 = claim_text(div7_nodes, "Daglig Leder");
			div7_nodes.forEach(detach_dev);
			t13 = claim_space(div10_nodes);
			div8 = claim_element(div10_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			t14 = claim_text(div8_nodes, "- Teodor Log Bjørvik");
			br3 = claim_element(div8_nodes, "BR", {});
			t15 = claim_text(div8_nodes, "Swag");
			div8_nodes.forEach(detach_dev);
			t16 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			strong1 = claim_element(div9_nodes, "STRONG", {});
			var strong1_nodes = children(strong1);
			t17 = claim_text(strong1_nodes, "Vi blir ");
			t18 = claim_text(strong1_nodes, /*nextAge*/ ctx[0]);
			t19 = claim_text(strong1_nodes, " år gamle om ");
			t20 = claim_text(strong1_nodes, /*Difference_In_Days*/ ctx[2]);
			t21 = claim_text(strong1_nodes, " dager.**");
			strong1_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			t22 = claim_space(nodes);
			div11 = claim_element(nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			t23 = claim_text(div11_nodes, "*Jeg stjal denne teksten fra google");
			br4 = claim_element(div11_nodes, "BR", {});
			t24 = claim_text(div11_nodes, "\n    **Ikke særlig relevant, men jeg brukte en stund på å lage en javascript code som alltid regner ut min nøyaktige alder og dager til bursdag.");
			br5 = claim_element(div11_nodes, "BR", {});
			t25 = claim_text(div11_nodes, " Den nøyaktige alderen akkurat nå er: ");
			t26 = claim_text(div11_nodes, /*Age_Difference_In_Days*/ ctx[1]);
			t27 = claim_text(div11_nodes, " år.");
			div11_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
			add_location(strong0, file, 138, 12, 3183);
			attr_dev(h1, "class", "svelte-1e0ou5e");
			add_location(h1, file, 138, 8, 3179);
			attr_dev(div0, "class", "header svelte-1e0ou5e");
			add_location(div0, file, 137, 4, 3150);
			add_location(br0, file, 141, 412, 3688);
			attr_dev(span, "class", "svelte-1e0ou5e");
			add_location(span, file, 141, 8, 3284);
			attr_dev(div1, "class", "info svelte-1e0ou5e");
			add_location(div1, file, 140, 4, 3257);
			if (!src_url_equal(img0.src, img0_src_value = "https://pbs.twimg.com/profile_images/1313579240051412992/mkHGgIOZ_400x400.jpg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "class", "svelte-1e0ou5e");
			add_location(img0, file, 144, 37, 3766);
			attr_dev(div2, "class", "teametb teameta svelte-1e0ou5e");
			add_location(div2, file, 144, 8, 3737);
			if (!src_url_equal(img1.src, img1_src_value = "https://pbs.twimg.com/profile_images/1313579240051412992/mkHGgIOZ_400x400.jpg")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "class", "svelte-1e0ou5e");
			add_location(img1, file, 145, 29, 3891);
			attr_dev(div3, "class", "teametb svelte-1e0ou5e");
			add_location(div3, file, 145, 8, 3870);
			if (!src_url_equal(img2.src, img2_src_value = "https://pbs.twimg.com/profile_images/1313579240051412992/mkHGgIOZ_400x400.jpg")) attr_dev(img2, "src", img2_src_value);
			attr_dev(img2, "class", "svelte-1e0ou5e");
			add_location(img2, file, 146, 37, 4024);
			attr_dev(div4, "class", "teametb teametc svelte-1e0ou5e");
			add_location(div4, file, 146, 8, 3995);
			attr_dev(div5, "class", "teamet svelte-1e0ou5e");
			add_location(div5, file, 143, 4, 3708);
			add_location(br1, file, 148, 47, 4180);
			attr_dev(div6, "class", "teamDesc1 svelte-1e0ou5e");
			add_location(div6, file, 148, 4, 4137);
			add_location(br2, file, 149, 47, 4242);
			attr_dev(div7, "class", "teamDesc2 svelte-1e0ou5e");
			add_location(div7, file, 149, 4, 4199);
			add_location(br3, file, 150, 47, 4312);
			attr_dev(div8, "class", "teamDesc3 svelte-1e0ou5e");
			add_location(div8, file, 150, 4, 4269);
			add_location(strong1, file, 151, 27, 4354);
			attr_dev(div9, "class", "teamDesc4 svelte-1e0ou5e");
			add_location(div9, file, 151, 4, 4331);
			attr_dev(div10, "class", "container svelte-1e0ou5e");
			add_location(div10, file, 136, 0, 3122);
			add_location(br4, file, 154, 57, 4506);
			add_location(br5, file, 155, 143, 4654);
			attr_dev(div11, "class", "relevant svelte-1e0ou5e");
			add_location(div11, file, 154, 0, 4449);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, div10, anchor);
			append_hydration_dev(div10, div0);
			append_hydration_dev(div0, h1);
			append_hydration_dev(h1, strong0);
			append_hydration_dev(strong0, t1);
			append_hydration_dev(div10, t2);
			append_hydration_dev(div10, div1);
			append_hydration_dev(div1, span);
			append_hydration_dev(span, t3);
			append_hydration_dev(span, br0);
			append_hydration_dev(div10, t4);
			append_hydration_dev(div10, div5);
			append_hydration_dev(div5, div2);
			append_hydration_dev(div2, img0);
			append_hydration_dev(div5, t5);
			append_hydration_dev(div5, div3);
			append_hydration_dev(div3, img1);
			append_hydration_dev(div5, t6);
			append_hydration_dev(div5, div4);
			append_hydration_dev(div4, img2);
			append_hydration_dev(div10, t7);
			append_hydration_dev(div10, div6);
			append_hydration_dev(div6, t8);
			append_hydration_dev(div6, br1);
			append_hydration_dev(div6, t9);
			append_hydration_dev(div10, t10);
			append_hydration_dev(div10, div7);
			append_hydration_dev(div7, t11);
			append_hydration_dev(div7, br2);
			append_hydration_dev(div7, t12);
			append_hydration_dev(div10, t13);
			append_hydration_dev(div10, div8);
			append_hydration_dev(div8, t14);
			append_hydration_dev(div8, br3);
			append_hydration_dev(div8, t15);
			append_hydration_dev(div10, t16);
			append_hydration_dev(div10, div9);
			append_hydration_dev(div9, strong1);
			append_hydration_dev(strong1, t17);
			append_hydration_dev(strong1, t18);
			append_hydration_dev(strong1, t19);
			append_hydration_dev(strong1, t20);
			append_hydration_dev(strong1, t21);
			insert_hydration_dev(target, t22, anchor);
			insert_hydration_dev(target, div11, anchor);
			append_hydration_dev(div11, t23);
			append_hydration_dev(div11, br4);
			append_hydration_dev(div11, t24);
			append_hydration_dev(div11, br5);
			append_hydration_dev(div11, t25);
			append_hydration_dev(div11, t26);
			append_hydration_dev(div11, t27);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*nextAge*/ 1) set_data_dev(t18, /*nextAge*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div10);
			if (detaching) detach_dev(t22);
			if (detaching) detach_dev(div11);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('About', slots, []);
	let nextAge = 18;
	let birthdate = new Date("04/05/2004");
	var today = new Date();
	var time = String(today.getTime());
	var dd = String(today.getDate()).padStart(2, '0');
	var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
	var yyyy = today.getFullYear();
	var today = new Date(mm + '/' + dd + '/' + yyyy);
	console.log(today);
	console.log(time);
	console.log(birthdate);
	console.log(today.getTime());
	console.log(birthdate.getTime());
	var Age_Difference_In_Time = time - birthdate.getTime();
	let Age_Difference_In_Days = Age_Difference_In_Time / (1000 * 3600 * 24 * 365.21);
	console.log(Age_Difference_In_Time);
	console.log(Age_Difference_In_Days);

	const nextageing = () => {
		if (Age_Difference_In_Days <= 19) {
			$$invalidate(0, nextAge = 19);
		} else if (Age_Difference_In_Days >= 20) {
			$$invalidate(0, nextAge = 20);
		}
	};

	nextageing();
	var date1 = new Date("04/05/2004");
	var date2 = date1.getTime() + nextAge * 31554189473;
	var burger = date2 - today;

	// To calculate the time difference of two dates
	var Difference_In_Time = date2 - today.getTime();

	// To calculate the no. of days between two dates
	let Difference_In_Days = Math.ceil(Difference_In_Time / (1000 * 3600 * 24));

	//To display the final no. of days (result)	
	console.log("Total number of days between dates  <br>" + date1 + "<br> and <br>" + today + " is: <br> " + Difference_In_Days);

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<About> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		nextAge,
		birthdate,
		today,
		time,
		dd,
		mm,
		yyyy,
		Age_Difference_In_Time,
		Age_Difference_In_Days,
		nextageing,
		date1,
		date2,
		burger,
		Difference_In_Time,
		Difference_In_Days
	});

	$$self.$inject_state = $$props => {
		if ('nextAge' in $$props) $$invalidate(0, nextAge = $$props.nextAge);
		if ('birthdate' in $$props) birthdate = $$props.birthdate;
		if ('today' in $$props) today = $$props.today;
		if ('time' in $$props) time = $$props.time;
		if ('dd' in $$props) dd = $$props.dd;
		if ('mm' in $$props) mm = $$props.mm;
		if ('yyyy' in $$props) yyyy = $$props.yyyy;
		if ('Age_Difference_In_Time' in $$props) Age_Difference_In_Time = $$props.Age_Difference_In_Time;
		if ('Age_Difference_In_Days' in $$props) $$invalidate(1, Age_Difference_In_Days = $$props.Age_Difference_In_Days);
		if ('date1' in $$props) date1 = $$props.date1;
		if ('date2' in $$props) date2 = $$props.date2;
		if ('burger' in $$props) burger = $$props.burger;
		if ('Difference_In_Time' in $$props) Difference_In_Time = $$props.Difference_In_Time;
		if ('Difference_In_Days' in $$props) $$invalidate(2, Difference_In_Days = $$props.Difference_In_Days);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [nextAge, Age_Difference_In_Days, Difference_In_Days];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export { About as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

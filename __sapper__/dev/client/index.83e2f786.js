import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, t as text, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, h as claim_text, j as attr_dev, k as add_location, l as src_url_equal, m as set_style, n as insert_hydration_dev, o as append_hydration_dev, p as noop } from './client.13e60c2a.js';

/* src\routes\index.svelte generated by Svelte v3.46.4 */

const file = "src\\routes\\index.svelte";

function create_fragment(ctx) {
	let t0;
	let h1;
	let t1;
	let t2;
	let figure;
	let img;
	let img_src_value;
	let t3;
	let figcaption;
	let t4;
	let t5;
	let p;
	let t6;
	let t7;
	let strong;
	let ul;
	let li0;
	let t8;
	let t9;
	let li1;
	let t10;
	let t11;
	let li2;
	let t12;
	let t13;
	let li3;
	let t14;

	const block = {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text("Velkommen!");
			t2 = space();
			figure = element("figure");
			img = element("img");
			t3 = space();
			figcaption = element("figcaption");
			t4 = text("Du er nå på Teo AS sin nettside!");
			t5 = space();
			p = element("p");
			t6 = text("Denne siden inneholder:");
			t7 = space();
			strong = element("strong");
			ul = element("ul");
			li0 = element("li");
			t8 = text("Informasjon vårt team");
			t9 = space();
			li1 = element("li");
			t10 = text("Tidligere arbeid");
			t11 = space();
			li2 = element("li");
			t12 = text("Kontaktinfo");
			t13 = space();
			li3 = element("li");
			t14 = text("youtube greier");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all('[data-svelte=\"svelte-11jap6g\"]', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Velkommen!");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			figure = claim_element(nodes, "FIGURE", { class: true });
			var figure_nodes = children(figure);
			img = claim_element(figure_nodes, "IMG", { alt: true, src: true, class: true });
			t3 = claim_space(figure_nodes);
			figcaption = claim_element(figure_nodes, "FIGCAPTION", { style: true });
			var figcaption_nodes = children(figcaption);
			t4 = claim_text(figcaption_nodes, "Du er nå på Teo AS sin nettside!");
			figcaption_nodes.forEach(detach_dev);
			figure_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);
			p = claim_element(nodes, "P", { style: true, class: true });
			var p_nodes = children(p);
			t6 = claim_text(p_nodes, "Denne siden inneholder:");
			p_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);
			strong = claim_element(nodes, "STRONG", {});
			var strong_nodes = children(strong);
			ul = claim_element(strong_nodes, "UL", {});
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			t8 = claim_text(li0_nodes, "Informasjon vårt team");
			li0_nodes.forEach(detach_dev);
			t9 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			t10 = claim_text(li1_nodes, "Tidligere arbeid");
			li1_nodes.forEach(detach_dev);
			t11 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			t12 = claim_text(li2_nodes, "Kontaktinfo");
			li2_nodes.forEach(detach_dev);
			t13 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			t14 = claim_text(li3_nodes, "youtube greier");
			li3_nodes.forEach(detach_dev);
			ul_nodes.forEach(detach_dev);
			strong_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Teo AS";
			attr_dev(h1, "class", "svelte-1hmcat9");
			add_location(h1, file, 50, 0, 538);
			attr_dev(img, "alt", "gaming monke");
			if (!src_url_equal(img.src, img_src_value = "gaming_monke.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "class", "svelte-1hmcat9");
			add_location(img, file, 53, 1, 569);
			set_style(figcaption, "font-size", "30px");
			add_location(figcaption, file, 54, 1, 618);
			attr_dev(figure, "class", "svelte-1hmcat9");
			add_location(figure, file, 52, 0, 559);
			set_style(p, "font-size", "30px");
			attr_dev(p, "class", "svelte-1hmcat9");
			add_location(p, file, 57, 0, 711);
			attr_dev(li0, "class", "svelte-1hmcat9");
			add_location(li0, file, 59, 2, 782);
			attr_dev(li1, "class", "svelte-1hmcat9");
			add_location(li1, file, 60, 2, 815);
			attr_dev(li2, "class", "svelte-1hmcat9");
			add_location(li2, file, 61, 2, 843);
			attr_dev(li3, "class", "svelte-1hmcat9");
			add_location(li3, file, 62, 2, 866);
			add_location(ul, file, 58, 9, 775);
			add_location(strong, file, 58, 1, 767);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, h1, anchor);
			append_hydration_dev(h1, t1);
			insert_hydration_dev(target, t2, anchor);
			insert_hydration_dev(target, figure, anchor);
			append_hydration_dev(figure, img);
			append_hydration_dev(figure, t3);
			append_hydration_dev(figure, figcaption);
			append_hydration_dev(figcaption, t4);
			insert_hydration_dev(target, t5, anchor);
			insert_hydration_dev(target, p, anchor);
			append_hydration_dev(p, t6);
			insert_hydration_dev(target, t7, anchor);
			insert_hydration_dev(target, strong, anchor);
			append_hydration_dev(strong, ul);
			append_hydration_dev(ul, li0);
			append_hydration_dev(li0, t8);
			append_hydration_dev(ul, t9);
			append_hydration_dev(ul, li1);
			append_hydration_dev(li1, t10);
			append_hydration_dev(ul, t11);
			append_hydration_dev(ul, li2);
			append_hydration_dev(li2, t12);
			append_hydration_dev(ul, t13);
			append_hydration_dev(ul, li3);
			append_hydration_dev(li3, t14);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(figure);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(p);
			if (detaching) detach_dev(t7);
			if (detaching) detach_dev(strong);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Routes', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export { Routes as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguODNlMmY3ODYuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cdGgxLCBmaWd1cmUsIHAsIGxpIHtcblx0XHRtYXJnaW46IDAgYXV0bztcblx0XHR0ZXh0LWFsaWduOmNlbnRlcjtcblx0fVxuXG5cdGgxIHtcblx0XHRmb250LXNpemU6IDIuOGVtO1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0XHRtYXJnaW46IDAgMCAwLjVlbSAwO1xuXHR9XG5cblx0ZmlndXJlIHtcblx0XHRtYXJnaW46IDAgMCAxZW0gMDtcblx0fVxuXG5cdGltZyB7XG5cdFx0d2lkdGg6IDMwJTtcblx0XHRtYXgtd2lkdGg6IDQwMHB4O1xuXHRcdG1hcmdpbjogMCAwIDFlbSAwO1xuXHR9XG5cblx0cCB7XG5cdFx0bWFyZ2luOiAxZW0gYXV0bztcblx0XHR0ZXh0LWFsaWduOmNlbnRlcjtcblx0XHRmb250LXNpemU6MS40cmVtO1xuXHR9XG5cdGxpIHtcblx0XHR3aWR0aDoyNDBweDtcblx0XHRmb250LXNpemU6MS40cmVtO1xuXHR9XG5cblx0XG5cblx0QG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XG5cdFx0aDEge1xuXHRcdFx0Zm9udC1zaXplOiA0ZW07XG5cdFx0fVxuXHR9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5UZW8gQVM8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPlZlbGtvbW1lbiE8L2gxPlxuXG48ZmlndXJlPlxuXHQ8aW1nIGFsdD1cImdhbWluZyBtb25rZVwiIHNyYz1cImdhbWluZ19tb25rZS5qcGdcIj5cblx0PGZpZ2NhcHRpb24gc3R5bGU9XCJmb250LXNpemU6MzBweDtcIj5EdSBlciBuw6UgcMOlIFRlbyBBUyBzaW4gbmV0dHNpZGUhPC9maWdjYXB0aW9uPlxuPC9maWd1cmU+XG5cbjxwIHN0eWxlPVwiZm9udC1zaXplOjMwcHg7XCI+RGVubmUgc2lkZW4gaW5uZWhvbGRlcjo8L3A+XG5cdDxzdHJvbmc+PHVsPlxuXHRcdDxsaT5JbmZvcm1hc2pvbiB2w6VydCB0ZWFtPC9saT5cblx0XHQ8bGk+VGlkbGlnZXJlIGFyYmVpZDwvbGk+XG5cdFx0PGxpPktvbnRha3RpbmZvPC9saT5cblx0XHQ8bGk+eW91dHViZSBncmVpZXI8L2xpPlxuXHQ8L3VsPjwvc3Ryb25nPlxuXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2FBa0RJLFlBQVUsQ0FBQSxDQUFBOzs7Ozs7YUFJdUIsa0NBQWdDLENBQUEsQ0FBQTs7O2FBRzFDLHlCQUF1QixDQUFBLENBQUE7Ozs7O2FBRTVDLHVCQUFxQixDQUFBLENBQUE7OztjQUNyQixrQkFBZ0IsQ0FBQSxDQUFBOzs7Y0FDaEIsYUFBVyxDQUFBLENBQUE7OztjQUNYLGdCQUFjLENBQUEsQ0FBQTs7Ozs7Ozs7OzZCQVpoQixZQUFVLENBQUEsQ0FBQTs7Ozs7Ozs7O3FDQUl1QixrQ0FBZ0MsQ0FBQSxDQUFBOzs7Ozs7NEJBRzFDLHlCQUF1QixDQUFBLENBQUE7Ozs7Ozs7Ozs4QkFFNUMsdUJBQXFCLENBQUEsQ0FBQTs7Ozs7K0JBQ3JCLGtCQUFnQixDQUFBLENBQUE7Ozs7OytCQUNoQixhQUFXLENBQUEsQ0FBQTs7Ozs7K0JBQ1gsZ0JBQWMsQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBWnBCLG9CQUFtQixDQUFBLE1BQUEsRUFBQSxFQUFBLEVBQUEsTUFBQSxDQUFBLENBQUE7OztHQUVuQixvQkFHUyxDQUFBLE1BQUEsRUFBQSxNQUFBLEVBQUEsTUFBQSxDQUFBLENBQUE7R0FGUixvQkFBK0MsQ0FBQSxNQUFBLEVBQUEsR0FBQSxDQUFBLENBQUE7O0dBQy9DLG9CQUFpRixDQUFBLE1BQUEsRUFBQSxVQUFBLENBQUEsQ0FBQTs7O0dBR2xGLG9CQUFzRCxDQUFBLE1BQUEsRUFBQSxDQUFBLEVBQUEsTUFBQSxDQUFBLENBQUE7OztHQUNyRCxvQkFLYyxDQUFBLE1BQUEsRUFBQSxNQUFBLEVBQUEsTUFBQSxDQUFBLENBQUE7R0FMTixvQkFLSCxDQUFBLE1BQUEsRUFBQSxFQUFBLENBQUEsQ0FBQTtHQUpKLG9CQUE4QixDQUFBLEVBQUEsRUFBQSxHQUFBLENBQUEsQ0FBQTs7O0dBQzlCLG9CQUF5QixDQUFBLEVBQUEsRUFBQSxHQUFBLENBQUEsQ0FBQTs7O0dBQ3pCLG9CQUFvQixDQUFBLEVBQUEsRUFBQSxHQUFBLENBQUEsQ0FBQTs7O0dBQ3BCLG9CQUF1QixDQUFBLEVBQUEsRUFBQSxHQUFBLENBQUEsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9

import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, t as text, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, h as claim_text, k as add_location, j as attr_dev, l as src_url_equal, n as insert_hydration_dev, o as append_hydration_dev, r as listen_dev, p as noop, u as run_all } from './client.780e8e67.js';

/* src\routes\contact.svelte generated by Svelte v3.46.4 */

const file = "src\\routes\\contact.svelte";

// (140:8) {:else}
function create_else_block(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Velg hvor du vil kontakte over.");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Velg hvor du vil kontakte over.");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(140:8) {:else}",
		ctx
	});

	return block;
}

// (133:36) 
function create_if_block_4(ctx) {
	let img0;
	let img0_src_value;
	let t0;
	let img1;
	let img1_src_value;
	let t1;
	let img2;
	let img2_src_value;
	let t2;
	let img3;
	let img3_src_value;
	let t3;
	let img4;
	let img4_src_value;
	let t4;
	let img5;
	let img5_src_value;

	const block = {
		c: function create() {
			img0 = element("img");
			t0 = space();
			img1 = element("img");
			t1 = space();
			img2 = element("img");
			t2 = space();
			img3 = element("img");
			t3 = space();
			img4 = element("img");
			t4 = space();
			img5 = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img0 = claim_element(nodes, "IMG", { alt: true, src: true, class: true });
			t0 = claim_space(nodes);
			img1 = claim_element(nodes, "IMG", { alt: true, src: true, class: true });
			t1 = claim_space(nodes);
			img2 = claim_element(nodes, "IMG", { alt: true, src: true, class: true });
			t2 = claim_space(nodes);
			img3 = claim_element(nodes, "IMG", { alt: true, src: true, class: true });
			t3 = claim_space(nodes);
			img4 = claim_element(nodes, "IMG", { alt: true, src: true, class: true });
			t4 = claim_space(nodes);
			img5 = claim_element(nodes, "IMG", { alt: true, src: true, class: true });
			this.h();
		},
		h: function hydrate() {
			attr_dev(img0, "alt", "balance");
			if (!src_url_equal(img0.src, img0_src_value = "balance.png")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "class", "svelte-13mhbl6");
			add_location(img0, file, 133, 12, 3847);
			attr_dev(img1, "alt", "golira");
			if (!src_url_equal(img1.src, img1_src_value = "golira.png")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "class", "svelte-13mhbl6");
			add_location(img1, file, 134, 12, 3898);
			attr_dev(img2, "alt", "lastbanana");
			if (!src_url_equal(img2.src, img2_src_value = "lastbanana.jpg")) attr_dev(img2, "src", img2_src_value);
			attr_dev(img2, "class", "svelte-13mhbl6");
			add_location(img2, file, 135, 12, 3947);
			attr_dev(img3, "alt", "pov banana");
			if (!src_url_equal(img3.src, img3_src_value = "POVBanana.jpg")) attr_dev(img3, "src", img3_src_value);
			attr_dev(img3, "class", "svelte-13mhbl6");
			add_location(img3, file, 136, 12, 4004);
			attr_dev(img4, "alt", "vibing monke");
			if (!src_url_equal(img4.src, img4_src_value = "vibe.jfif")) attr_dev(img4, "src", img4_src_value);
			attr_dev(img4, "class", "svelte-13mhbl6");
			add_location(img4, file, 137, 12, 4060);
			attr_dev(img5, "alt", "monke icon");
			if (!src_url_equal(img5.src, img5_src_value = "monke.jpg")) attr_dev(img5, "src", img5_src_value);
			attr_dev(img5, "class", "svelte-13mhbl6");
			add_location(img5, file, 138, 12, 4114);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, img0, anchor);
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, img1, anchor);
			insert_hydration_dev(target, t1, anchor);
			insert_hydration_dev(target, img2, anchor);
			insert_hydration_dev(target, t2, anchor);
			insert_hydration_dev(target, img3, anchor);
			insert_hydration_dev(target, t3, anchor);
			insert_hydration_dev(target, img4, anchor);
			insert_hydration_dev(target, t4, anchor);
			insert_hydration_dev(target, img5, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img0);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(img1);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(img2);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(img3);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(img4);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(img5);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(133:36) ",
		ctx
	});

	return block;
}

// (131:35) 
function create_if_block_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Litt for personlig + idk ka det er");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Litt for personlig + idk ka det er");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(131:35) ",
		ctx
	});

	return block;
}

// (128:34) 
function create_if_block_2(ctx) {
	let t0;
	let u0;
	let t1;
	let t2;
	let br;
	let t3;
	let u1;
	let t4;
	let t5;

	const block = {
		c: function create() {
			t0 = text("Personlig Telefon: ");
			u0 = element("u");
			t1 = text("90062363");
			t2 = text(".");
			br = element("br");
			t3 = text("\r\n            Bedrift Telefon: ");
			u1 = element("u");
			t4 = text("mangler");
			t5 = text(".");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_text(nodes, "Personlig Telefon: ");
			u0 = claim_element(nodes, "U", {});
			var u0_nodes = children(u0);
			t1 = claim_text(u0_nodes, "90062363");
			u0_nodes.forEach(detach_dev);
			t2 = claim_text(nodes, ".");
			br = claim_element(nodes, "BR", {});
			t3 = claim_text(nodes, "\r\n            Bedrift Telefon: ");
			u1 = claim_element(nodes, "U", {});
			var u1_nodes = children(u1);
			t4 = claim_text(u1_nodes, "mangler");
			u1_nodes.forEach(detach_dev);
			t5 = claim_text(nodes, ".");
			this.h();
		},
		h: function hydrate() {
			add_location(u0, file, 128, 31, 3644);
			add_location(br, file, 128, 47, 3660);
			add_location(u1, file, 129, 29, 3695);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, u0, anchor);
			append_hydration_dev(u0, t1);
			insert_hydration_dev(target, t2, anchor);
			insert_hydration_dev(target, br, anchor);
			insert_hydration_dev(target, t3, anchor);
			insert_hydration_dev(target, u1, anchor);
			append_hydration_dev(u1, t4);
			insert_hydration_dev(target, t5, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(u0);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(br);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(u1);
			if (detaching) detach_dev(t5);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(128:34) ",
		ctx
	});

	return block;
}

// (126:35) 
function create_if_block_1(ctx) {
	let span;
	let t0;
	let u0;
	let t1;
	let br;
	let t2;
	let u1;
	let t3;

	const block = {
		c: function create() {
			span = element("span");
			t0 = text("Skolemail: ");
			u0 = element("u");
			t1 = text("tebjorvik@elev.rogfk.no");
			br = element("br");
			t2 = text(" Jobbmail: ");
			u1 = element("u");
			t3 = text("teovirksomhet@gmail.com");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", {});
			var span_nodes = children(span);
			t0 = claim_text(span_nodes, "Skolemail: ");
			u0 = claim_element(span_nodes, "U", {});
			var u0_nodes = children(u0);
			t1 = claim_text(u0_nodes, "tebjorvik@elev.rogfk.no");
			u0_nodes.forEach(detach_dev);
			br = claim_element(span_nodes, "BR", {});
			t2 = claim_text(span_nodes, " Jobbmail: ");
			u1 = claim_element(span_nodes, "U", {});
			var u1_nodes = children(u1);
			t3 = claim_text(u1_nodes, "teovirksomhet@gmail.com");
			u1_nodes.forEach(detach_dev);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(u0, file, 126, 29, 3493);
			add_location(br, file, 126, 59, 3523);
			add_location(u1, file, 126, 74, 3538);
			add_location(span, file, 126, 12, 3476);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, span, anchor);
			append_hydration_dev(span, t0);
			append_hydration_dev(span, u0);
			append_hydration_dev(u0, t1);
			append_hydration_dev(span, br);
			append_hydration_dev(span, t2);
			append_hydration_dev(span, u1);
			append_hydration_dev(u1, t3);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(126:35) ",
		ctx
	});

	return block;
}

// (124:8) {#if Value === "Discord"}
function create_if_block(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Kontaktinfo for discord er utilgjengelig");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Kontaktinfo for discord er utilgjengelig");
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(124:8) {#if Value === \\\"Discord\\\"}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let div20;
	let div0;
	let h10;
	let t1;
	let span0;
	let b0;
	let t2;
	let t3;
	let div1;
	let t4;
	let t5;
	let div2;
	let h11;
	let t6;
	let t7;
	let div18;
	let div5;
	let div4;
	let img0;
	let img0_src_value;
	let br0;
	let span1;
	let b1;
	let t8;
	let div3;
	let a0;
	let t9;
	let t10;
	let div8;
	let div7;
	let img1;
	let img1_src_value;
	let br1;
	let span2;
	let b2;
	let t11;
	let div6;
	let a1;
	let t12;
	let t13;
	let div11;
	let div10;
	let img2;
	let img2_src_value;
	let br2;
	let span3;
	let b3;
	let t14;
	let div9;
	let a2;
	let t15;
	let t16;
	let div14;
	let div13;
	let img3;
	let img3_src_value;
	let br3;
	let span4;
	let b4;
	let t17;
	let div12;
	let a3;
	let t18;
	let t19;
	let div17;
	let div16;
	let img4;
	let img4_src_value;
	let br4;
	let span5;
	let b5;
	let t20;
	let div15;
	let a4;
	let t21;
	let t22;
	let div19;
	let mounted;
	let dispose;

	function select_block_type(ctx, dirty) {
		if (/*Value*/ ctx[0] === "Discord") return create_if_block;
		if (/*Value*/ ctx[0] === "Mail") return create_if_block_1;
		if (/*Value*/ ctx[0] === "TLF") return create_if_block_2;
		if (/*Value*/ ctx[0] === "Snap") return create_if_block_3;
		if (/*Value*/ ctx[0] === "Monke") return create_if_block_4;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			t0 = space();
			div20 = element("div");
			div0 = element("div");
			h10 = element("h1");
			t1 = text("Kontakt ");
			span0 = element("span");
			b0 = element("b");
			t2 = text("TEODOR INC. LLC. AS.GOV");
			t3 = space();
			div1 = element("div");
			t4 = text("bar");
			t5 = space();
			div2 = element("div");
			h11 = element("h1");
			t6 = text("Mandag - Mandag: 07:00 - 07:01 (GMT+1)");
			t7 = space();
			div18 = element("div");
			div5 = element("div");
			div4 = element("div");
			img0 = element("img");
			br0 = element("br");
			span1 = element("span");
			b1 = element("b");
			t8 = text("Discord");
			div3 = element("div");
			a0 = element("a");
			t9 = text("DM meg");
			t10 = space();
			div8 = element("div");
			div7 = element("div");
			img1 = element("img");
			br1 = element("br");
			span2 = element("span");
			b2 = element("b");
			t11 = text("Gmail");
			div6 = element("div");
			a1 = element("a");
			t12 = text("Send mail");
			t13 = space();
			div11 = element("div");
			div10 = element("div");
			img2 = element("img");
			br2 = element("br");
			span3 = element("span");
			b3 = element("b");
			t14 = text("Telefon");
			div9 = element("div");
			a2 = element("a");
			t15 = text("Ring TLF");
			t16 = space();
			div14 = element("div");
			div13 = element("div");
			img3 = element("img");
			br3 = element("br");
			span4 = element("span");
			b4 = element("b");
			t17 = text("Snapchat");
			div12 = element("div");
			a3 = element("a");
			t18 = text("IDKW HAT");
			t19 = space();
			div17 = element("div");
			div16 = element("div");
			img4 = element("img");
			br4 = element("br");
			span5 = element("span");
			b5 = element("b");
			t20 = text("MONKE");
			div15 = element("div");
			a4 = element("a");
			t21 = text("MONKE");
			t22 = space();
			div19 = element("div");
			if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all('[data-svelte=\"svelte-uee4nd\"]', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div20 = claim_element(nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			div0 = claim_element(div20_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h10 = claim_element(div0_nodes, "H1", {});
			var h10_nodes = children(h10);
			t1 = claim_text(h10_nodes, "Kontakt ");
			span0 = claim_element(h10_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			b0 = claim_element(span0_nodes, "B", {});
			var b0_nodes = children(b0);
			t2 = claim_text(b0_nodes, "TEODOR INC. LLC. AS.GOV");
			b0_nodes.forEach(detach_dev);
			span0_nodes.forEach(detach_dev);
			h10_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div20_nodes);
			div1 = claim_element(div20_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t4 = claim_text(div1_nodes, "bar");
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div20_nodes);
			div2 = claim_element(div20_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h11 = claim_element(div2_nodes, "H1", {});
			var h11_nodes = children(h11);
			t6 = claim_text(h11_nodes, "Mandag - Mandag: 07:00 - 07:01 (GMT+1)");
			h11_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t7 = claim_space(div20_nodes);
			div18 = claim_element(div20_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			div5 = claim_element(div18_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			img0 = claim_element(div4_nodes, "IMG", { alt: true, src: true, class: true });
			br0 = claim_element(div4_nodes, "BR", {});
			span1 = claim_element(div4_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			b1 = claim_element(span1_nodes, "B", {});
			var b1_nodes = children(b1);
			t8 = claim_text(b1_nodes, "Discord");
			b1_nodes.forEach(detach_dev);
			span1_nodes.forEach(detach_dev);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			a0 = claim_element(div3_nodes, "A", {});
			var a0_nodes = children(a0);
			t9 = claim_text(a0_nodes, "DM meg");
			a0_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t10 = claim_space(div18_nodes);
			div8 = claim_element(div18_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			img1 = claim_element(div7_nodes, "IMG", { alt: true, src: true, class: true });
			br1 = claim_element(div7_nodes, "BR", {});
			span2 = claim_element(div7_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			b2 = claim_element(span2_nodes, "B", {});
			var b2_nodes = children(b2);
			t11 = claim_text(b2_nodes, "Gmail");
			b2_nodes.forEach(detach_dev);
			span2_nodes.forEach(detach_dev);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			a1 = claim_element(div6_nodes, "A", {});
			var a1_nodes = children(a1);
			t12 = claim_text(a1_nodes, "Send mail");
			a1_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t13 = claim_space(div18_nodes);
			div11 = claim_element(div18_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			img2 = claim_element(div10_nodes, "IMG", { alt: true, src: true, class: true });
			br2 = claim_element(div10_nodes, "BR", {});
			span3 = claim_element(div10_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			b3 = claim_element(span3_nodes, "B", {});
			var b3_nodes = children(b3);
			t14 = claim_text(b3_nodes, "Telefon");
			b3_nodes.forEach(detach_dev);
			span3_nodes.forEach(detach_dev);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			a2 = claim_element(div9_nodes, "A", {});
			var a2_nodes = children(a2);
			t15 = claim_text(a2_nodes, "Ring TLF");
			a2_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			t16 = claim_space(div18_nodes);
			div14 = claim_element(div18_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			img3 = claim_element(div13_nodes, "IMG", { alt: true, src: true, class: true });
			br3 = claim_element(div13_nodes, "BR", {});
			span4 = claim_element(div13_nodes, "SPAN", { class: true });
			var span4_nodes = children(span4);
			b4 = claim_element(span4_nodes, "B", {});
			var b4_nodes = children(b4);
			t17 = claim_text(b4_nodes, "Snapchat");
			b4_nodes.forEach(detach_dev);
			span4_nodes.forEach(detach_dev);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			a3 = claim_element(div12_nodes, "A", {});
			var a3_nodes = children(a3);
			t18 = claim_text(a3_nodes, "IDKW HAT");
			a3_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			t19 = claim_space(div18_nodes);
			div17 = claim_element(div18_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			div16 = claim_element(div17_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			img4 = claim_element(div16_nodes, "IMG", { alt: true, src: true, class: true });
			br4 = claim_element(div16_nodes, "BR", {});
			span5 = claim_element(div16_nodes, "SPAN", { class: true });
			var span5_nodes = children(span5);
			b5 = claim_element(span5_nodes, "B", {});
			var b5_nodes = children(b5);
			t20 = claim_text(b5_nodes, "MONKE");
			b5_nodes.forEach(detach_dev);
			span5_nodes.forEach(detach_dev);
			div15 = claim_element(div16_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			a4 = claim_element(div15_nodes, "A", {});
			var a4_nodes = children(a4);
			t21 = claim_text(a4_nodes, "MONKE");
			a4_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			t22 = claim_space(div20_nodes);
			div19 = claim_element(div20_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			if_block.l(div19_nodes);
			div19_nodes.forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Kontakt";
			add_location(b0, file, 112, 42, 2063);
			attr_dev(span0, "class", "svelte-13mhbl6");
			add_location(span0, file, 112, 36, 2057);
			add_location(h10, file, 112, 24, 2045);
			attr_dev(div0, "class", "header svelte-13mhbl6");
			add_location(div0, file, 112, 4, 2025);
			attr_dev(div1, "class", "bar svelte-13mhbl6");
			add_location(div1, file, 113, 4, 2117);
			add_location(h11, file, 114, 22, 2167);
			attr_dev(div2, "class", "midt svelte-13mhbl6");
			add_location(div2, file, 114, 4, 2149);
			attr_dev(img0, "alt", "Discord Icon");
			if (!src_url_equal(img0.src, img0_src_value = "discord.png")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "class", "svelte-13mhbl6");
			add_location(img0, file, 116, 62, 2320);
			add_location(br0, file, 116, 102, 2360);
			add_location(b1, file, 116, 112, 2370);
			attr_dev(span1, "class", "svelte-13mhbl6");
			add_location(span1, file, 116, 106, 2364);
			add_location(a0, file, 116, 182, 2440);
			attr_dev(div3, "class", "kontaktButton svelte-13mhbl6");
			add_location(div3, file, 116, 133, 2391);
			attr_dev(div4, "class", "Info svelte-13mhbl6");
			add_location(div4, file, 116, 44, 2302);
			attr_dev(div5, "class", "discordKontakt Kontakt svelte-13mhbl6");
			add_location(div5, file, 116, 8, 2266);
			attr_dev(img1, "alt", "Gmail Icon");
			if (!src_url_equal(img1.src, img1_src_value = "gmail.png")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "class", "svelte-13mhbl6");
			add_location(img1, file, 117, 60, 2533);
			add_location(br1, file, 117, 96, 2569);
			add_location(b2, file, 117, 106, 2579);
			attr_dev(span2, "class", "svelte-13mhbl6");
			add_location(span2, file, 117, 100, 2573);
			add_location(a1, file, 117, 171, 2644);
			attr_dev(div6, "class", "kontaktButton svelte-13mhbl6");
			add_location(div6, file, 117, 125, 2598);
			attr_dev(div7, "class", "Info svelte-13mhbl6");
			add_location(div7, file, 117, 42, 2515);
			attr_dev(div8, "class", "emailKontakt Kontakt svelte-13mhbl6");
			add_location(div8, file, 117, 8, 2481);
			attr_dev(img2, "alt", "TLF Icon");
			if (!src_url_equal(img2.src, img2_src_value = "phone.png")) attr_dev(img2, "src", img2_src_value);
			attr_dev(img2, "class", "svelte-13mhbl6");
			add_location(img2, file, 118, 58, 2738);
			add_location(br2, file, 118, 92, 2772);
			add_location(b3, file, 118, 102, 2782);
			attr_dev(span3, "class", "svelte-13mhbl6");
			add_location(span3, file, 118, 96, 2776);
			add_location(a2, file, 118, 168, 2848);
			attr_dev(div9, "class", "kontaktButton svelte-13mhbl6");
			add_location(div9, file, 118, 123, 2803);
			attr_dev(div10, "class", "Info svelte-13mhbl6");
			add_location(div10, file, 118, 40, 2720);
			attr_dev(div11, "class", "tlfKontakt Kontakt svelte-13mhbl6");
			add_location(div11, file, 118, 8, 2688);
			attr_dev(img3, "alt", "Snapchat Icon");
			if (!src_url_equal(img3.src, img3_src_value = "snapchat.png")) attr_dev(img3, "src", img3_src_value);
			attr_dev(img3, "class", "svelte-13mhbl6");
			add_location(img3, file, 119, 63, 2946);
			add_location(br3, file, 119, 105, 2988);
			add_location(b4, file, 119, 115, 2998);
			attr_dev(span4, "class", "svelte-13mhbl6");
			add_location(span4, file, 119, 109, 2992);
			add_location(a3, file, 119, 183, 3066);
			attr_dev(div12, "class", "kontaktButton svelte-13mhbl6");
			add_location(div12, file, 119, 137, 3020);
			attr_dev(div13, "class", "Info svelte-13mhbl6");
			add_location(div13, file, 119, 45, 2928);
			attr_dev(div14, "class", "snapchatKontakt Kontakt svelte-13mhbl6");
			add_location(div14, file, 119, 8, 2891);
			attr_dev(img4, "alt", "MONKE");
			if (!src_url_equal(img4.src, img4_src_value = "monke.jpg")) attr_dev(img4, "src", img4_src_value);
			attr_dev(img4, "class", "svelte-13mhbl6");
			add_location(img4, file, 120, 53, 3154);
			add_location(br4, file, 120, 84, 3185);
			add_location(b5, file, 120, 94, 3195);
			attr_dev(span5, "class", "svelte-13mhbl6");
			add_location(span5, file, 120, 88, 3189);
			add_location(a4, file, 120, 160, 3261);
			attr_dev(div15, "class", "kontaktButton svelte-13mhbl6");
			add_location(div15, file, 120, 113, 3214);
			attr_dev(div16, "class", "Info svelte-13mhbl6");
			add_location(div16, file, 120, 35, 3136);
			attr_dev(div17, "class", "monke Kontakt svelte-13mhbl6");
			add_location(div17, file, 120, 8, 3109);
			attr_dev(div18, "class", "containerKontakt svelte-13mhbl6");
			add_location(div18, file, 115, 4, 2226);
			attr_dev(div19, "class", "infoContainer svelte-13mhbl6");
			add_location(div19, file, 122, 4, 3309);
			attr_dev(div20, "class", "container svelte-13mhbl6");
			add_location(div20, file, 111, 0, 1996);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, div20, anchor);
			append_hydration_dev(div20, div0);
			append_hydration_dev(div0, h10);
			append_hydration_dev(h10, t1);
			append_hydration_dev(h10, span0);
			append_hydration_dev(span0, b0);
			append_hydration_dev(b0, t2);
			append_hydration_dev(div20, t3);
			append_hydration_dev(div20, div1);
			append_hydration_dev(div1, t4);
			append_hydration_dev(div20, t5);
			append_hydration_dev(div20, div2);
			append_hydration_dev(div2, h11);
			append_hydration_dev(h11, t6);
			append_hydration_dev(div20, t7);
			append_hydration_dev(div20, div18);
			append_hydration_dev(div18, div5);
			append_hydration_dev(div5, div4);
			append_hydration_dev(div4, img0);
			append_hydration_dev(div4, br0);
			append_hydration_dev(div4, span1);
			append_hydration_dev(span1, b1);
			append_hydration_dev(b1, t8);
			append_hydration_dev(div4, div3);
			append_hydration_dev(div3, a0);
			append_hydration_dev(a0, t9);
			append_hydration_dev(div18, t10);
			append_hydration_dev(div18, div8);
			append_hydration_dev(div8, div7);
			append_hydration_dev(div7, img1);
			append_hydration_dev(div7, br1);
			append_hydration_dev(div7, span2);
			append_hydration_dev(span2, b2);
			append_hydration_dev(b2, t11);
			append_hydration_dev(div7, div6);
			append_hydration_dev(div6, a1);
			append_hydration_dev(a1, t12);
			append_hydration_dev(div18, t13);
			append_hydration_dev(div18, div11);
			append_hydration_dev(div11, div10);
			append_hydration_dev(div10, img2);
			append_hydration_dev(div10, br2);
			append_hydration_dev(div10, span3);
			append_hydration_dev(span3, b3);
			append_hydration_dev(b3, t14);
			append_hydration_dev(div10, div9);
			append_hydration_dev(div9, a2);
			append_hydration_dev(a2, t15);
			append_hydration_dev(div18, t16);
			append_hydration_dev(div18, div14);
			append_hydration_dev(div14, div13);
			append_hydration_dev(div13, img3);
			append_hydration_dev(div13, br3);
			append_hydration_dev(div13, span4);
			append_hydration_dev(span4, b4);
			append_hydration_dev(b4, t17);
			append_hydration_dev(div13, div12);
			append_hydration_dev(div12, a3);
			append_hydration_dev(a3, t18);
			append_hydration_dev(div18, t19);
			append_hydration_dev(div18, div17);
			append_hydration_dev(div17, div16);
			append_hydration_dev(div16, img4);
			append_hydration_dev(div16, br4);
			append_hydration_dev(div16, span5);
			append_hydration_dev(span5, b5);
			append_hydration_dev(b5, t20);
			append_hydration_dev(div16, div15);
			append_hydration_dev(div15, a4);
			append_hydration_dev(a4, t21);
			append_hydration_dev(div20, t22);
			append_hydration_dev(div20, div19);
			if_block.m(div19, null);

			if (!mounted) {
				dispose = [
					listen_dev(div3, "click", /*visDiscord*/ ctx[1], false, false, false),
					listen_dev(div6, "click", /*visMail*/ ctx[2], false, false, false),
					listen_dev(div9, "click", /*visTLF*/ ctx[3], false, false, false),
					listen_dev(div12, "click", /*visSnap*/ ctx[4], false, false, false),
					listen_dev(div15, "click", /*visMonke*/ ctx[5], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (current_block_type !== (current_block_type = select_block_type(ctx))) {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div19, null);
				}
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div20);
			if_block.d();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Contact', slots, []);
	let Value = "";

	const visDiscord = () => {
		$$invalidate(0, Value = "Discord");
	};

	const visMail = () => {
		$$invalidate(0, Value = "Mail");
	};

	const visTLF = () => {
		$$invalidate(0, Value = "TLF");
	};

	const visSnap = () => {
		$$invalidate(0, Value = "Snap");
	};

	const visMonke = () => {
		$$invalidate(0, Value = "Monke");
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Contact> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		Value,
		visDiscord,
		visMail,
		visTLF,
		visSnap,
		visMonke
	});

	$$self.$inject_state = $$props => {
		if ('Value' in $$props) $$invalidate(0, Value = $$props.Value);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [Value, visDiscord, visMail, visTLF, visSnap, visMonke];
}

class Contact extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Contact",
			options,
			id: create_fragment.name
		});
	}
}

export { Contact as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
